{"version":3,"sources":["constants.js","Data/memes-data.js","Contexts/MemesContext.jsx","Components/Footer.jsx","Components/Navigation.jsx","Components/MenuMobile.jsx","Components/NavigationMobile.jsx","Components/MemeTitle.jsx","Components/MemeImage.jsx","Components/FavoriteButton.jsx","Components/VoteButton.jsx","Components/MemeButtons.jsx","Components/Meme.jsx","Components/Memes.jsx","App.js","index.js"],"names":["VOTE_TYPES","ROUTE_NAMES","COLORS","BREAKPOINT","MEMES_DATA","MemesContext","createContext","MemesContextProvider","props","useState","memes","setMemes","Provider","value","children","StyledFooter","styled","div","Footer","style","padding","StyledNavigation","nav","StyledNavigationWrapper","StyledLink","Link","StyledLogo","Navigation","location","useLocation","linkText","hot","pathname","regular","favorites","to","StyledMenuMobile","MenuMobile","StyledNavigationMobile","StyledNavigationMobileWrapper","StyledMenuButton","button","NavigationMobile","menuVisible","setMenuVisible","onClick","StyledTitle","MemeTitle","title","truncatedTitle","length","substr","ImageWrapper","StyledImage","img","Image","url","alt","src","StyledFavoriteButton","iconColor","FavoriteButton","icon","onClickAction","StyledVoteButton","backgroundColor","VoteButton","text","StyledMemeButtons","MemeButtons","meme","useContext","vote","id","voteType","updatedMemes","map","upvotes","downvotes","favorite","addToFavorites","StyledMeme","Meme","MemeImage","link","name","StyledMemes","main","StyledNoMemesPlaceholder","NoMemesPlaceholder","Memes","memesToShow","filter","StyledApp","App","window","innerWidth","screenWidth","setScreenWidth","useEffect","addEventListener","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"6LAAaA,EACC,SADDA,EAEG,WAGHC,EACF,MADEA,EAEE,UAFFA,EAGI,YAGJC,EACD,UADCA,EAEA,UAFAA,EAGF,UAHEA,EAIA,UAJAA,EAKA,UAKAC,EAAa,I,eCrBbC,EAAa,CACtB,CACI,GAAM,EACN,MAAS,cACT,KAAQ,qFACR,QAAW,EACX,UAAa,EACb,UAAY,GAEhB,CACI,GAAM,EACN,MAAS,oDACT,KAAQ,sDACR,QAAW,EACX,UAAa,EACb,UAAY,GAEhB,CACI,GAAM,EACN,MAAS,cACT,KAAQ,sEACR,QAAW,EACX,UAAa,EACb,UAAY,GAEhB,CACI,GAAM,EACN,MAAS,cACT,KAAQ,4GACR,QAAW,EACX,UAAa,EACb,UAAY,GAEhB,CACI,GAAM,EACN,MAAS,cACT,KAAQ,sGACR,QAAW,EACX,UAAa,EACb,UAAY,GAEhB,CACI,GAAM,EACN,MAAS,cACT,KAAQ,kKACR,QAAW,EACX,UAAa,EACb,UAAY,GAEhB,CACI,GAAM,EACN,MAAS,cACT,KAAQ,qEACR,QAAW,EACX,UAAa,EACb,UAAY,GAEhB,CACI,GAAM,EACN,MAAS,cACT,KAAQ,kDACR,QAAW,EACX,UAAa,EACb,UAAY,GAEhB,CACI,GAAM,EACN,MAAS,cACT,KAAQ,sEACR,QAAW,EACX,UAAa,EACb,UAAY,GAEhB,CACI,GAAM,GACN,MAAS,cACT,KAAQ,0EACR,QAAW,EACX,UAAa,EACb,UAAY,I,OC5EPC,EAAeC,0BAEfC,EAAuB,SAACC,GACnC,MAA0BC,mBAASL,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KAEA,OACE,cAACN,EAAaO,SAAd,CAAuBC,MAAO,CAACH,EAAOC,GAAtC,SACGH,EAAMM,Y,OCPPC,EAAeC,IAAOC,IAAV,8RAKPf,EAMYC,EACVD,GAaEgB,I,QAAAA,EATf,WACE,OACE,eAACH,EAAD,WACG,qBAAKI,MAAO,CAAEC,QAAS,QAAvB,+BACA,qBAAKD,MAAO,CAAEC,QAAS,QAAvB,qCCjBDC,EAAmBL,IAAOM,IAAV,mPAUApB,GAIhBqB,EAA0BP,IAAOC,IAAV,mEAKvBO,EAAaR,YAAOS,IAAPT,CAAH,iIAELd,GAMLwB,EAAaV,YAAOQ,EAAPR,CAAH,4HAqCDW,I,IAAAA,EA9Bf,WACE,IAAMC,EAAWC,cAEXC,EAAW,CACfC,IAAKH,EAASI,WAAa,IAAM/B,EAAkB,QAAU,MAC7DgC,QACEL,EAASI,WAAa,IAAM/B,EAAsB,YAAc,UAClEiC,UACEN,EAASI,WAAa,IAAM/B,EACxB,cACA,aAGR,OACE,cAACsB,EAAD,UACE,eAACF,EAAD,WACE,cAACK,EAAD,CAAYS,GAAI,IAAMlC,EAAtB,qBACA,cAACuB,EAAD,CAAYW,GAAI,IAAMlC,EAAtB,SAAwC6B,EAASC,MACjD,cAACP,EAAD,CAAYW,GAAI,IAAMlC,EAAtB,SACG6B,EAASG,UAEZ,cAACT,EAAD,CAAYW,GAAI,IAAMlC,EAAtB,SACG6B,EAASI,YAEZ,cAAC,EAAD,U,QC3DFE,EAAmBpB,IAAOM,IAAV,sHAKApB,GAGhBsB,EAAaR,YAAOS,IAAPT,CAAH,gLAMUd,EACfA,GA2BImC,I,QAAAA,EAxBf,WACE,IAAMT,EAAWC,cAEXC,EAAW,CACfC,IAAKH,EAASI,WAAa,IAAM/B,EAAkB,QAAU,MAC7DgC,QACEL,EAASI,WAAa,IAAM/B,EAAsB,YAAc,UAClEiC,UACEN,EAASI,WAAa,IAAM/B,EACxB,cACA,aAGR,OACE,eAACmC,EAAD,WACE,cAAC,EAAD,CAAYD,GAAI,IAAMlC,EAAtB,SAAwC6B,EAASC,MACjD,cAAC,EAAD,CAAYI,GAAI,IAAMlC,EAAtB,SAA4C6B,EAASG,UACrD,cAAC,EAAD,CAAYE,GAAI,IAAMlC,EAAtB,SACG6B,EAASI,gBClCZI,EAAyBtB,IAAOM,IAAV,8NASNpB,GAIhBqC,EAAgCvB,IAAOC,IAAV,sEAK7BS,EAAaV,YAAOS,IAAPT,CAAH,+IAKLd,GAGLsC,EAAmBxB,IAAOyB,OAAV,oMA8BPC,I,EAAAA,GAnBf,WACE,MAAsCjC,oBAAS,GAA/C,mBAAOkC,EAAP,KAAoBC,EAApB,KAKA,OACE,cAACL,EAAD,UACE,eAACD,EAAD,WACE,cAAC,EAAD,CAAYH,GAAI,IAAMlC,EAAtB,qBACA,eAACuC,EAAD,CAAkBK,QARF,WACpBD,GAAgBD,IAOZ,UACE,cAAC,IAAD,IACCA,EAAc,cAAC,EAAD,IAAiB,cCrDpCG,GAAc9B,IAAOC,IAAV,4LAmBF8B,I,MAAAA,GATf,YAA+B,IAAVC,EAAS,EAATA,MACbC,EACJD,EAAME,OPIsB,GOHxBF,EAAMG,OAAO,EPGW,IOHY,MACpCH,EAEN,OAAO,cAACF,GAAD,UAAcG,KChBjBG,GAAepC,IAAOC,IAAV,8JAMIf,GAGhBmD,GAAcrC,IAAOsC,IAAV,uEAaFC,I,GAAAA,GARf,YAA8B,IAAbC,EAAY,EAAZA,IAAKC,EAAO,EAAPA,IACpB,OACE,cAACL,GAAD,UACE,cAACC,GAAD,CAAaK,IAAKF,EAAKC,IAAKA,O,kBClB5BE,GAAuB3C,IAAOyB,OAAV,2HAGf,SAACjC,GAAD,OAAWA,EAAMoD,aAabC,I,GAAAA,GARf,YAA6D,IAAnCC,EAAkC,EAAlCA,KAAMF,EAA4B,EAA5BA,UAAWG,EAAiB,EAAjBA,cACzC,OACE,cAACJ,GAAD,CAAsBC,UAAWA,EAAWf,QAASkB,EAArD,SACGD,KCXDE,GAAmBhD,IAAOyB,OAAV,6TAQA,SAACjC,GAAD,OAAWA,EAAMyD,mBAiBxBC,I,GAAAA,GATf,YAAqE,IAA/CJ,EAA8C,EAA9CA,KAAMK,EAAwC,EAAxCA,KAAMF,EAAkC,EAAlCA,gBAAiBF,EAAiB,EAAjBA,cACjD,OACE,eAACC,GAAD,CAAkBC,gBAAiBA,EAAiBpB,QAASkB,EAA7D,UACGD,EACAK,MCbDC,GAAoBpD,IAAOC,IAAV,iJAgERoD,I,GAAAA,GAxDf,YAAgC,IAATC,EAAQ,EAARA,KACrB,EAA0BC,qBAAWlE,GAArC,mBAAOK,EAAP,KAAcC,EAAd,KAEM6D,EAAO,SAACC,EAAIC,GAChB,IAAIC,EAAejE,EAEnB,OAAQgE,GACN,KAAK1E,EACH2E,EAAejE,EAAMkE,KAAI,SAACN,GAAD,OACvBA,EAAKG,KAAOA,EAAZ,6BAAsBH,GAAtB,IAA4BO,QAASP,EAAKO,QAAU,IAAMP,KAE5D,MACF,KAAKtE,EACH2E,EAAejE,EAAMkE,KAAI,SAACN,GAAD,OACvBA,EAAKG,KAAOA,EAAZ,6BAAsBH,GAAtB,IAA4BQ,UAAWR,EAAKQ,UAAY,IAAMR,KAEhE,MACF,QACEK,EAAejE,EAInBC,EAASgE,IAWX,OACE,eAACP,GAAD,WACE,cAAC,GAAD,CACEN,KAAM,cAAC,KAAD,IACNK,KAAMG,EAAKO,QACXZ,gBAAiB/D,EACjB6D,cAAe,kBAAMS,EAAKF,EAAKG,GAAIzE,MAErC,cAAC,GAAD,CACE8D,MAAwB,IAAlBQ,EAAKS,SAAoB,cAAC,IAAD,IAAc,cAAC,IAAD,IAC7CnB,UAAW1D,EACX6D,cAAe,kBAnBE,SAACU,GACtB,IAAME,EAAejE,EAAMkE,KAAI,SAACN,GAAD,OAC7BA,EAAKG,KAAOA,EAAZ,6BAAsBH,GAAtB,IAA4BS,UAAWT,EAAKS,WAAaT,KAG3D3D,EAASgE,GAcgBK,CAAeV,EAAKG,OAE3C,cAAC,GAAD,CACEX,KAAM,cAAC,KAAD,IACNK,KAAMG,EAAKQ,UACXb,gBAAiB/D,EACjB6D,cAAe,kBAAMS,EAAKF,EAAKG,GAAIzE,UC7DrCiF,GAAajE,IAAOC,IAAV,uVASMf,EAECC,GAeR+E,I,MAAAA,GAVf,YAAyB,IAATZ,EAAQ,EAARA,KACd,OACE,eAACW,GAAD,WACE,cAAC,GAAD,CAAWjC,MAAOsB,EAAKtB,QACvB,cAACmC,GAAD,CAAW3B,IAAKc,EAAKc,KAAM3B,IAAKa,EAAKe,OACrC,cAAC,GAAD,CAAaf,KAAMA,QCpBnBgB,GAActE,IAAOuE,KAAV,oEAKXC,GAA2BxE,IAAOC,IAAV,oEAKxBwE,GAAqB,WACzB,OACE,cAACD,GAAD,mDAsCWE,I,GAAAA,GAhCf,WACE,MAAgBnB,qBAAWlE,GAApBK,EAAP,oBAGIiF,EAAcjF,EAElB,OAHiBmB,cAGAG,UACf,IAAK,IAAM/B,EACT0F,EAAcjF,EAAMkF,QAAO,SAACtB,GAAD,OAAUA,EAAKO,QAAUP,EAAKQ,WAAa,KACtE,MACF,IAAK,IAAM7E,EACT0F,EAAcjF,EAAMkF,QAAO,SAACtB,GAAD,OAAUA,EAAKO,QAAUP,EAAKQ,UAAY,KACrE,MACF,IAAK,IAAM7E,EACT0F,EAAcjF,EAAMkF,QAAO,SAACtB,GAAD,OAA4B,IAAlBA,EAAKS,YAC1C,MACF,QACEY,EAAcjF,EAIlB,OACE,cAAC4E,GAAD,UACGK,EAAYzC,OAAS,EACpByC,EAAYf,KAAI,SAACN,GAAD,OAAU,cAAC,GAAD,CAAoBA,KAAMA,GAAfA,EAAKG,OAE1C,cAAC,GAAD,OCzCFoB,GAAY7E,IAAOC,IAAV,gHAEQd,GA8CR2F,OAzCf,WACE,MAAsCrF,mBAASsF,OAAOC,YAAtD,mBAAOC,EAAP,KAAoBC,EAApB,KAMA,OAJAC,qBAAU,WACRJ,OAAOK,iBAAiB,UAAU,kBAAMF,EAAeH,OAAOC,iBAC7D,IAGD,cAAC,IAAD,UACE,cAAC,EAAD,UACE,eAACH,GAAD,WACGI,GAAe9F,EAAa,cAAC,GAAD,IAAuB,cAAC,EAAD,IACpD,eAAC,IAAD,WACE,cAAC,IAAD,CACEkG,KAAM,IAAMpG,EACZqG,OAAK,EACLC,OAAQ,kBAAM,cAAC,GAAD,OAEhB,cAAC,IAAD,CACEF,KAAM,IAAMpG,EACZqG,OAAK,EACLC,OAAQ,kBAAM,cAAC,GAAD,OAEhB,cAAC,IAAD,CACEF,KAAM,IAAMpG,EACZqG,OAAK,EACLC,OAAQ,kBAAM,cAAC,GAAD,OAEhB,cAAC,IAAD,CACEA,OAAQ,kBACN,cAAC,IAAD,CAAUpE,GAAI,CAAEH,SAAU,IAAM/B,WAIrCgG,GAAe9F,EAAa,cAAC,EAAD,IAAa,a,MC9CpDqG,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.905d04e3.chunk.js","sourcesContent":["export const VOTE_TYPES = {\r\n    'upvote': 'upvote',\r\n    'downvote': 'downvote'\r\n}\r\n\r\nexport const ROUTE_NAMES = {\r\n    'hot': 'hot',\r\n    'regular': 'regular',\r\n    'favorites': 'favorites'\r\n}\r\n\r\nexport const COLORS = {\r\n    'blue': '#067bc2',\r\n    'green': '#519e8a',\r\n    'red': '#ef767a',\r\n    'white': '#fcfcfc',\r\n    'black': '#111111'\r\n}\r\n\r\nexport const MAX_TITLE_LENGTH = 26;\r\n\r\nexport const BREAKPOINT = 768;\r\n","export const MEMES_DATA = [\r\n    {\r\n        \"id\": 1,\r\n        \"title\": \"Just a Meme\",\r\n        \"link\": \"https://ukontentowani.pl/wp-content/uploads/2020/11/uk-popularne-memy-1024x768.jpg\",\r\n        \"upvotes\": 0,\r\n        \"downvotes\": 0,\r\n        \"favorite\": false\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"title\": \"Just an example of the too long title for a meme!\",\r\n        \"link\": \"https://miro.medium.com/max/1634/0*r6iQzljiuJavVxRM\",\r\n        \"upvotes\": 0,\r\n        \"downvotes\": 0,\r\n        \"favorite\": false\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"title\": \"Just a Meme\",\r\n        \"link\": \"https://cdn.ebaumsworld.com/mediaFiles/picture/2502212/86634061.jpg\",\r\n        \"upvotes\": 0,\r\n        \"downvotes\": 0,\r\n        \"favorite\": false\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"title\": \"Just a Meme\",\r\n        \"link\": \"https://www.thecoderpedia.com/wp-content/uploads/2020/06/Programming-in-2009-vs-2019-1024x1015.jpg?x78269\",\r\n        \"upvotes\": 0,\r\n        \"downvotes\": 0,\r\n        \"favorite\": false\r\n    },\r\n    {\r\n        \"id\": 5,\r\n        \"title\": \"Just a Meme\",\r\n        \"link\": \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQpoLVYcXYfAh-035FeH8eyfJQnuxhQfx3-hw&usqp=CAU\",\r\n        \"upvotes\": 0,\r\n        \"downvotes\": 0,\r\n        \"favorite\": false\r\n    },\r\n    {\r\n        \"id\": 6,\r\n        \"title\": \"Just a Meme\",\r\n        \"link\": \"https://www.researchgate.net/profile/Damian_J_Rivers/publication/312775677/figure/fig1/AS:558631225655296@1510199471264/Example-of-Typical-Image-Macro-Meme.png\",\r\n        \"upvotes\": 0,\r\n        \"downvotes\": 0,\r\n        \"favorite\": false\r\n    },\r\n    {\r\n        \"id\": 7,\r\n        \"title\": \"Just a Meme\",\r\n        \"link\": \"http://images7.memedroid.com/images/UPLOADED998/5eab9171b5ba5.jpeg\",\r\n        \"upvotes\": 0,\r\n        \"downvotes\": 0,\r\n        \"favorite\": false\r\n    },\r\n    {\r\n        \"id\": 8,\r\n        \"title\": \"Just a Meme\",\r\n        \"link\": \"https://pbs.twimg.com/media/COEPy-aWcAA4hqd.png\",\r\n        \"upvotes\": 0,\r\n        \"downvotes\": 0,\r\n        \"favorite\": false\r\n    },\r\n    {\r\n        \"id\": 9,\r\n        \"title\": \"Just a Meme\",\r\n        \"link\": \"https://images7.memedroid.com/images/UPLOADED756/58b34bea061a1.jpeg\",\r\n        \"upvotes\": 0,\r\n        \"downvotes\": 0,\r\n        \"favorite\": false\r\n    },\r\n    {\r\n        \"id\": 10,\r\n        \"title\": \"Just a Meme\",\r\n        \"link\": \"https://i.pinimg.com/736x/43/c7/38/43c738b17972e3adec62a943bb7b9043.jpg\",\r\n        \"upvotes\": 0,\r\n        \"downvotes\": 0,\r\n        \"favorite\": false\r\n    }\r\n]\r\n","import { MEMES_DATA } from \"../Data/memes-data\";\r\nimport { useState, createContext } from \"react\";\r\n\r\nexport const MemesContext = createContext();\r\n\r\nexport const MemesContextProvider = (props) => {\r\n  const [memes, setMemes] = useState(MEMES_DATA);\r\n\r\n  return (\r\n    <MemesContext.Provider value={[memes, setMemes]}>\r\n      {props.children}\r\n    </MemesContext.Provider>\r\n  );\r\n};\r\n","import { COLORS, BREAKPOINT } from \"./../constants.js\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledFooter = styled.div`\r\n  flex-grow: 1;\r\n  max-width: 100%;\r\n  height: 70px;\r\n  font-size: 12px;\r\n  color: ${COLORS.white};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding: 20px;\r\n  @media (max-width: ${BREAKPOINT}px) {\r\n    color: ${COLORS.black};\r\n  }\r\n`;\r\n\r\nfunction Footer() {\r\n  return (\r\n    <StyledFooter>\r\n      {<div style={{ padding: \"10px\" }}>MemeApp@gmail.com</div>}\r\n      {<div style={{ padding: \"10px\" }}>&copy; Copyright 2021</div>}\r\n    </StyledFooter>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { ROUTE_NAMES, COLORS } from \"../constants\";\r\nimport { useLocation } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"./Footer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledNavigation = styled.nav`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 300px;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  items-align: center;\r\n  justify-content: center;\r\n  background-color: ${COLORS.blue};\r\n  z-index: 1;\r\n`;\r\n\r\nconst StyledNavigationWrapper = styled.div`\r\n  min-width: 300px;\r\n  height: 100vh;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  display: block;\r\n  color: ${COLORS.white};\r\n  text-decoration: none;\r\n  font-size: 36px;\r\n  margin: 16px 40px;\r\n`;\r\n\r\nconst StyledLogo = styled(StyledLink)`\r\n  font-family: \"Ranchers\";\r\n  text-decoration: underline;\r\n  font-size: 48px;\r\n  margin: 40px;\r\n`;\r\n\r\nfunction Navigation() {\r\n  const location = useLocation();\r\n\r\n  const linkText = {\r\n    hot: location.pathname === \"/\" + ROUTE_NAMES.hot ? \"Hot *\" : \"Hot\",\r\n    regular:\r\n      location.pathname === \"/\" + ROUTE_NAMES.regular ? \"Regular *\" : \"Regular\",\r\n    favorites:\r\n      location.pathname === \"/\" + ROUTE_NAMES.favorites\r\n        ? \"Favorites *\"\r\n        : \"Favorites\",\r\n  };\r\n\r\n  return (\r\n    <StyledNavigationWrapper>\r\n      <StyledNavigation>\r\n        <StyledLogo to={\"/\" + ROUTE_NAMES.regular}>MemeApp</StyledLogo>\r\n        <StyledLink to={\"/\" + ROUTE_NAMES.hot}>{linkText.hot}</StyledLink>\r\n        <StyledLink to={\"/\" + ROUTE_NAMES.regular}>\r\n          {linkText.regular}\r\n        </StyledLink>\r\n        <StyledLink to={\"/\" + ROUTE_NAMES.favorites}>\r\n          {linkText.favorites}\r\n        </StyledLink>\r\n        <Footer />\r\n      </StyledNavigation>\r\n    </StyledNavigationWrapper>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { ROUTE_NAMES, COLORS } from \"../constants.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMenuMobile = styled.nav`\r\n  position: absolute;\r\n  top: 80px;\r\n  right: 0;\r\n  width: 60%;\r\n  background-color: ${COLORS.blue};\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  display: block;\r\n  padding: 10px;\r\n  font-size: 22px;\r\n  text-align: left;\r\n  text-decoration: none;\r\n  border-top: 1px solid ${COLORS.white};\r\n  color: ${COLORS.white};\r\n`;\r\n\r\nfunction MenuMobile() {\r\n  const location = useLocation();\r\n\r\n  const linkText = {\r\n    hot: location.pathname === \"/\" + ROUTE_NAMES.hot ? \"Hot *\" : \"Hot\",\r\n    regular:\r\n      location.pathname === \"/\" + ROUTE_NAMES.regular ? \"Regular *\" : \"Regular\",\r\n    favorites:\r\n      location.pathname === \"/\" + ROUTE_NAMES.favorites\r\n        ? \"Favorites *\"\r\n        : \"Favorites\",\r\n  };\r\n\r\n  return (\r\n    <StyledMenuMobile>\r\n      <StyledLink to={\"/\" + ROUTE_NAMES.hot}>{linkText.hot}</StyledLink>\r\n      <StyledLink to={\"/\" + ROUTE_NAMES.regular}>{linkText.regular}</StyledLink>\r\n      <StyledLink to={\"/\" + ROUTE_NAMES.favorites}>\r\n        {linkText.favorites}\r\n      </StyledLink>\r\n    </StyledMenuMobile>\r\n  );\r\n}\r\n\r\nexport default MenuMobile;\r\n","import { ROUTE_NAMES, COLORS } from \"../constants.js\";\r\nimport { HiMenu } from \"react-icons/hi\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuMobile from \"./MenuMobile\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledNavigationMobile = styled.nav`\r\n  top: 0;\r\n  left: 0;\r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: ${COLORS.blue};\r\n  z-index: 1;\r\n`;\r\n\r\nconst StyledNavigationMobileWrapper = styled.div`\r\n  min-width: 100vw;\r\n  min-height: 80px;\r\n`;\r\n\r\nconst StyledLogo = styled(Link)`\r\n  margin-left: 30px;\r\n  font-family: \"Ranchers\";\r\n  text-decoration: underline;\r\n  font-size: 32px;\r\n  color: ${COLORS.white};\r\n`;\r\n\r\nconst StyledMenuButton = styled.button`\r\n  margin-right: 30px;\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  font-size: 48px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nfunction NavigationMobile() {\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n  const openCloseMenu = () => {\r\n    setMenuVisible(!menuVisible);\r\n  };\r\n\r\n  return (\r\n    <StyledNavigationMobileWrapper>\r\n      <StyledNavigationMobile>\r\n        <StyledLogo to={\"/\" + ROUTE_NAMES.regular}>MemeApp</StyledLogo>\r\n        <StyledMenuButton onClick={openCloseMenu}>\r\n          <HiMenu />\r\n          {menuVisible ? <MenuMobile /> : null}\r\n        </StyledMenuButton>\r\n      </StyledNavigationMobile>\r\n    </StyledNavigationMobileWrapper>\r\n  );\r\n}\r\n\r\nexport default NavigationMobile;\r\n","import { MAX_TITLE_LENGTH } from \"../constants\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTitle = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px;\r\n  font-family: \"Droid Sans\";\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n`;\r\n\r\nfunction MemeTitle({ title }) {\r\n  const truncatedTitle =\r\n    title.length > MAX_TITLE_LENGTH\r\n      ? title.substr(0, MAX_TITLE_LENGTH) + \"...\"\r\n      : title;\r\n\r\n  return <StyledTitle>{truncatedTitle}</StyledTitle>;\r\n}\r\n\r\nexport default MemeTitle;\r\n","import { COLORS } from \"./../constants\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ImageWrapper = styled.div`\r\n  width: 100;\r\n  height: 320px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${COLORS.black};\r\n`;\r\n\r\nconst StyledImage = styled.img`\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n`;\r\n\r\nfunction Image({ url, alt }) {\r\n  return (\r\n    <ImageWrapper>\r\n      <StyledImage src={url} alt={alt}></StyledImage>\r\n    </ImageWrapper>\r\n  );\r\n}\r\n\r\nexport default Image;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledFavoriteButton = styled.button`\r\n  border: none;\r\n  background: none;\r\n  color: ${(props) => props.iconColor};\r\n  font-size: 48px;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction FavoriteButton({ icon, iconColor, onClickAction }) {\r\n  return (\r\n    <StyledFavoriteButton iconColor={iconColor} onClick={onClickAction}>\r\n      {icon}\r\n    </StyledFavoriteButton>\r\n  );\r\n}\r\n\r\nexport default FavoriteButton;\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledVoteButton = styled.button`\r\n  width: 25%;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  font-family: \"Ranchers\";\r\n  font-size: 24px;\r\n  color: white;\r\n  background-color: ${(props) => props.backgroundColor};\r\n  cursor: pointer;\r\n  border: none;\r\n  :active {\r\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n  }\r\n`;\r\n\r\nfunction VoteButton({ icon, text, backgroundColor, onClickAction }) {\r\n  return (\r\n    <StyledVoteButton backgroundColor={backgroundColor} onClick={onClickAction}>\r\n      {icon}\r\n      {text}\r\n    </StyledVoteButton>\r\n  );\r\n}\r\n\r\nexport default VoteButton;\r\n","import { VOTE_TYPES, COLORS } from \"../constants\";\r\nimport { AiFillLike, AiFillDislike } from \"react-icons/ai\";\r\nimport { HiHeart, HiOutlineHeart } from \"react-icons/hi\";\r\nimport { MemesContext } from \"../Contexts/MemesContext\";\r\nimport { useContext } from \"react\";\r\nimport FavoriteButton from \"./FavoriteButton\";\r\nimport VoteButton from \"./VoteButton\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMemeButtons = styled.div`\r\n  max-width: 100%;\r\n  padding: 16px;\r\n  display: flex;\r\n  align-items: stretch;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nfunction MemeButtons({ meme }) {\r\n  const [memes, setMemes] = useContext(MemesContext);\r\n\r\n  const vote = (id, voteType) => {\r\n    let updatedMemes = memes;\r\n\r\n    switch (voteType) {\r\n      case VOTE_TYPES.upvote:\r\n        updatedMemes = memes.map((meme) =>\r\n          meme.id === id ? { ...meme, upvotes: meme.upvotes + 1 } : meme\r\n        );\r\n        break;\r\n      case VOTE_TYPES.downvote:\r\n        updatedMemes = memes.map((meme) =>\r\n          meme.id === id ? { ...meme, downvotes: meme.downvotes + 1 } : meme\r\n        );\r\n        break;\r\n      default:\r\n        updatedMemes = memes;\r\n        break;\r\n    }\r\n\r\n    setMemes(updatedMemes);\r\n  };\r\n\r\n  const addToFavorites = (id) => {\r\n    const updatedMemes = memes.map((meme) =>\r\n      meme.id === id ? { ...meme, favorite: !meme.favorite } : meme\r\n    );\r\n\r\n    setMemes(updatedMemes);\r\n  };\r\n\r\n  return (\r\n    <StyledMemeButtons>\r\n      <VoteButton\r\n        icon={<AiFillLike />}\r\n        text={meme.upvotes}\r\n        backgroundColor={COLORS.green}\r\n        onClickAction={() => vote(meme.id, VOTE_TYPES.upvote)}\r\n      />\r\n      <FavoriteButton\r\n        icon={meme.favorite === true ? <HiHeart /> : <HiOutlineHeart />}\r\n        iconColor={COLORS.blue}\r\n        onClickAction={() => addToFavorites(meme.id)}\r\n      />\r\n      <VoteButton\r\n        icon={<AiFillDislike />}\r\n        text={meme.downvotes}\r\n        backgroundColor={COLORS.red}\r\n        onClickAction={() => vote(meme.id, VOTE_TYPES.downvote)}\r\n      />\r\n    </StyledMemeButtons>\r\n  );\r\n}\r\n\r\nexport default MemeButtons;\r\n","import { BREAKPOINT, COLORS } from \"./../constants\";\r\nimport MemeTitle from \"./MemeTitle\";\r\nimport MemeImage from \"./MemeImage\";\r\nimport MemeButtons from \"./MemeButtons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMeme = styled.div`\r\n  width: 25vw;\r\n  min-width: 320px;\r\n  height: 480px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  justify-content: center;\r\n  margin: 50px;\r\n  background-color: ${COLORS.white};\r\n  box-shadow: 0px 0px 8px 3px rgba(0, 0, 0, 0.8);\r\n  @media (max-width: ${BREAKPOINT}px) {\r\n    margin: 30px auto 0 auto;\r\n  }\r\n`;\r\n\r\nfunction Meme({ meme }) {\r\n  return (\r\n    <StyledMeme>\r\n      <MemeTitle title={meme.title} />\r\n      <MemeImage url={meme.link} alt={meme.name} />\r\n      <MemeButtons meme={meme} />\r\n    </StyledMeme>\r\n  );\r\n}\r\n\r\nexport default Meme;\r\n","import { ROUTE_NAMES } from \"../constants\";\r\nimport { MemesContext } from \"../Contexts/MemesContext\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Meme from \"./Meme\";\r\n\r\nconst StyledMemes = styled.main`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledNoMemesPlaceholder = styled.div`\r\n  font-size: 20px;\r\n  padding: 40px;\r\n`;\r\n\r\nconst NoMemesPlaceholder = () => {\r\n  return (\r\n    <StyledNoMemesPlaceholder>\r\n      There are no Memes in this section!\r\n    </StyledNoMemesPlaceholder>\r\n  );\r\n};\r\n\r\nfunction Memes() {\r\n  const [memes] = useContext(MemesContext);\r\n\r\n  const location = useLocation();\r\n  let memesToShow = memes;\r\n\r\n  switch (location.pathname) {\r\n    case \"/\" + ROUTE_NAMES.hot:\r\n      memesToShow = memes.filter((meme) => meme.upvotes - meme.downvotes >= 5);\r\n      break;\r\n    case \"/\" + ROUTE_NAMES.regular:\r\n      memesToShow = memes.filter((meme) => meme.upvotes - meme.downvotes < 5);\r\n      break;\r\n    case \"/\" + ROUTE_NAMES.favorites:\r\n      memesToShow = memes.filter((meme) => meme.favorite === true);\r\n      break;\r\n    default:\r\n      memesToShow = memes;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <StyledMemes>\r\n      {memesToShow.length > 0 ? (\r\n        memesToShow.map((meme) => <Meme key={meme.id} meme={meme} />)\r\n      ) : (\r\n        <NoMemesPlaceholder />\r\n      )}\r\n    </StyledMemes>\r\n  );\r\n}\r\n\r\nexport default Memes;\r\n","import { ROUTE_NAMES, BREAKPOINT } from \"./constants\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { MemesContextProvider } from \"./Contexts/MemesContext\";\r\nimport Navigation from \"./Components/Navigation\";\r\nimport NavigationMobile from \"./Components/NavigationMobile\";\r\nimport Memes from \"./Components/Memes\";\r\nimport Footer from \"./Components/Footer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledApp = styled.div`\r\n  display: flex;\r\n  @media (max-width: ${BREAKPOINT}px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => setScreenWidth(window.innerWidth));\r\n  }, []); // Update 'screenWidth' when the window is resized\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <MemesContextProvider>\r\n        <StyledApp>\r\n          {screenWidth <= BREAKPOINT ? <NavigationMobile /> : <Navigation />}\r\n          <Switch>\r\n            <Route\r\n              path={\"/\" + ROUTE_NAMES.hot}\r\n              exact\r\n              render={() => <Memes />}\r\n            />\r\n            <Route\r\n              path={\"/\" + ROUTE_NAMES.regular}\r\n              exact\r\n              render={() => <Memes />}\r\n            />\r\n            <Route\r\n              path={\"/\" + ROUTE_NAMES.favorites}\r\n              exact\r\n              render={() => <Memes />}\r\n            />\r\n            <Route\r\n              render={() => (\r\n                <Redirect to={{ pathname: \"/\" + ROUTE_NAMES.regular }} />\r\n              )}\r\n            />\r\n          </Switch>\r\n          {screenWidth <= BREAKPOINT ? <Footer /> : null}\r\n        </StyledApp>\r\n      </MemesContextProvider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}